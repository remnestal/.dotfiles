tests["Status is OK"] = pm.response.to.be.ok;
tests["Response is JSON"] = pm.response.to.be.json;

var data = JSON.parse(responseBody);

// Schema check
tests["JSON response schema validation"] = tv4.validate(data, {
  "type": "array",
  "items": {
    "required": ["status", "number", "created", "charge", "subscription", "document"],
    "properties": {
      "status": { "type": "string" },
      "number": { "type": "string" },
      "created": { "type": "integer" },
      "subscription": {
        "required": ["period_start", "period_end"],
        "properties": {
          "period_start": { "type": "integer" },
          "period_end": { "type": "integer" },
        }
      },
      "document": {
        "required": ["hosted", "pdf"],
        "properties": {
          "hosted": { "type": "string" },
          "pdf": { "type": "string" },
        }
      },
      "charge": {
        "required": ["collection_method", "refunded", "due_date", "paid_at", "amount"],
        "properties": {
          "collection_method": { "type": "string" },
          "refunded": { "type": "boolean" },
          "due_date": { "anyOf": [ "integer", "null" ] },
          "paid_at": { "anyOf": [ "integer", "null" ] },
          "amount": {
            "required": ["total", "paid", "remaining", "currency"],
            "properties": {
              "total": { "type": "integer" },
              "paid": { "type": "integer" },
              "remaining": { "type": "integer" },
              "currency": { "type": "string" },
            }
          },
        }
      },
    }
  }
});
